# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: CI & CD for person-api

on:
  push:
     branches: [ "main" ]
  pull_request:
     branches: [ "main" ]
     types: [opened, synchronize, reopened]

jobs:
  job_build_package:
    name: Scan SAST & Build Package
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Cache Maven
      uses: actions/cache@v4.0.2
      env:
          cache-name: cache-maven-modules
      with:
        path: ~/.m2/repository/
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

    - name: Cache SonarCloud packages
      uses: actions/cache@v4.0.2
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
          
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Run unit tests
      run: ./mvnw clean test

    - name: Run integration tests
      run: ./mvnw clean verify

    - name: SonarCloud Scan
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: ./mvnw clean verify sonar:sonar -Dsonar.projectKey=rogercc4_person-api -Dsonar.organization=rogercc4 -Dsonar.host.url=https://sonarcloud.io

    - name: SonarQube Quality Gate Check
      uses: SonarSource/sonarqube-quality-gate-action@v1.1.0
      timeout-minutes: 5
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        scanMetadataReportFile: target/sonar/report-task.txt

    - name: "Show SonarQube Quality Gate Status value"
      run: echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"

    - name: Build with Maven
      run: ./mvnw clean package

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.3.3
      with:
        name: artifacts-person-api-ms
        path: | 
          target/*.jar
          deploy/Dockerfile
        if-no-files-found: error
        retention-days: 1
      
  job_create_pull_image:
    name: Create and Publish docker image
    runs-on: ubuntu-latest
    needs: job_build_package
    steps:

    - name: Download a Build Artifact
      uses: actions/download-artifact@v4.1.6
      with:
        name: artifacts-person-api-ms

    - name: List all files
      run: ls -lha
    
    - name: Docker Login
      uses: docker/login-action@v3.1.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Docker Metadata action
      id: meta
      uses: docker/metadata-action@v5.5.1
      with:
        images: ${{ secrets.DOCKER_USERNAME }}/person-api
          
    - name: Build and push Docker images
      uses: docker/build-push-action@v5.3.0
      with:
          context: .
          file: ./deploy/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          github-token: ${{ secrets.GITHUB_TOKEN }}