# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Cache
      uses: actions/cache@v4.0.2
      env:
          cache-name: cache-maven-modules
      with:
        path: ~/.m2/repository/
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: SonarCloud Scan
      # You may pin to the exact commit or the version.
      # uses: SonarSource/sonarcloud-github-action@49e6cd3b187936a73b8280d59ffd9da69df63ec9
      #uses: SonarSource/sonarcloud-github-action@v2.1.1
      #env:
      #  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: ./mvnw sonar:sonar -Dsonar.projectKey=PERSON-API -Dsonar.organization=HOME -Dsonar.host.url=https://sonarcloud.io -Pcoverage
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Build with Maven
      run: ./mvnw clean package

